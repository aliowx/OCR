stages:
  - test
  - build
  - deploy
  - build-production
  - deploy-production
  
test-project-test:
  stage: test
  before_script:
    - "docker login --username $PARKING_REGISTERY_USER --password $PARKING_REGISTERY_PASSWORD $PARKING_REGISTERY_URL"
  script:
    - "echo test"
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'test'"

build-project-image-test:
  stage: build
  before_script:
    - touch .env
    - cd ./app
    - touch .env
    - cd ..
    - "docker login --username $PARKING_REGISTERY_USER --password $PARKING_REGISTERY_PASSWORD $PARKING_REGISTERY_URL"
  script:
    - "export TAG=latest-cicd"
    - "echo build image with TAG latest-cicd"
    - "echo deploy to registery"
    - "sh publishProject.sh"
  tags:
    - shell_executer
  after_script:
    - "echo build is done"
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'test'"

deploy-iranmall-project-test-server:
  stage: deploy
  script:
    - "echo deploy to test server iranmall parking"
    - sudo scp -i /home/ubuntu/.ssh/id_rsa -o StrictHostKeyChecking=no $ENV_IRANMALL_PROJECT_FILE_PARKING $PARKING_TEST_SERVER_USER@$PARKING_TEST_SERVER_IP:/home/ubuntu/projects/iranmall-parking-backend/.env
    - sudo ssh -i /home/ubuntu/.ssh/id_rsa -o StrictHostKeyChecking=no $PARKING_TEST_SERVER_USER@$PARKING_TEST_SERVER_IP "cd /home/ubuntu/projects/iranmall-parking-backend && sudo TAG=latest-cicd docker compose pull && sudo TAG=latest-cicd docker compose down && sudo TAG=latest-cicd docker compose up -d && exit"
  tags:
    - shell_executer
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'test'"
      when: manual

# deploy-anahid-project-test-server:
#   stage: deploy
#   script:
#     - "echo deploy to test server anahid parking"
#     - sudo scp -i /home/ubuntu/.ssh/id_rsa -o StrictHostKeyChecking=no $ENV_ANAHID_PROJECT_FILE_PARKING $PARKING_TEST_SERVER_USER@$PARKING_TEST_SERVER_IP:/home/ubuntu/projects/anahid-parking-backend/.env
#     - sudo ssh -i /home/ubuntu/.ssh/id_rsa -o StrictHostKeyChecking=no $PARKING_TEST_SERVER_USER@$PARKING_TEST_SERVER_IP "cd /home/ubuntu/projects/anahid-parking-backend && sudo TAG=latest-cicd docker compose pull && sudo TAG=latest-cicd docker compose down && sudo TAG=latest-cicd docker compose up -d && exit"
#   tags:
#     - shell_executer
#   rules:
#     - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'test'"
#       when: manual


build-project-image-productioon:
  stage: build-production
  before_script:
    - touch .env
    - cd ./app
    - touch .env
    - cd ..
    - "docker login --username $PARKING_REGISTERY_USER --password $PARKING_REGISTERY_PASSWORD $PARKING_REGISTERY_URL"
  script:
    - "echo deploy to registery"
    - "sh publishProject.sh"
  tags:
    - shell_executer
  after_script:
    - "echo build is done"
  only:
    - /^v\d+\.\d+\.\d+$/


deploy-project-image-production-server:
  stage: deploy-production
  script:
    - scp -i /home/gitlab-runner/.ssh/id_rsa -o StrictHostKeyChecking=no -p 20095 $ENV_IRANMALL_PROJECT_FILE_PARKING $PARkING_USER@$PARKING_IP:/home/mohamadeq/projects/iranmall-backend/.env
    - ssh -o StrictHostKeyChecking=no -i /home/gitlab-runner/.ssh/id_rsa $PARkING_USER@$PARKING_IP -p 20095 "cd /home/mohamadeq/projects/iranmall-backend && export TAG=$TAG_VER && docker compose pull && docker compose down && docker compose up -d"
  tags:
    - shell_executer
  environment:
    name: production
  variables:
    TAG_VER: $CI_COMMIT_TAG
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
      when: manual
