"""update model priceing

Revision ID: 557725f0cff5
Revises: f104376002fa
Create Date: 2024-06-24 11:30:29.505768

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '557725f0cff5'
down_revision = 'f104376002fa'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_plate_big_image_id', table_name='plate')
    op.drop_index('ix_plate_camera_id', table_name='plate')
    op.drop_index('ix_plate_created', table_name='plate')
    op.drop_index('ix_plate_id', table_name='plate')
    op.drop_index('ix_plate_is_deleted', table_name='plate')
    op.drop_index('ix_plate_lpr_id', table_name='plate')
    op.drop_index('ix_plate_modified', table_name='plate')
    op.drop_index('ix_plate_ocr', table_name='plate')
    op.drop_index('ix_plate_record_id', table_name='plate')
    op.drop_index('ix_plate_record_time', table_name='plate')
    op.drop_table('plate')
    op.add_column('camera', sa.Column('image_main_id', sa.Integer(), nullable=True))
    op.add_column('camera', sa.Column('zone_id', sa.Integer(), nullable=True))
    op.drop_index('ix_camera_image_id', table_name='camera')
    op.create_index(op.f('ix_camera_image_main_id'), 'camera', ['image_main_id'], unique=False)
    op.create_index(op.f('ix_camera_zone_id'), 'camera', ['zone_id'], unique=False)
    op.drop_constraint('camera_image_id_fkey', 'camera', type_='foreignkey')
    op.create_foreign_key(None, 'camera', 'parkingzone', ['zone_id'], ['id'], onupdate='CASCADE', ondelete='SET NULL')
    op.create_foreign_key(None, 'camera', 'image', ['image_main_id'], ['id'], onupdate='CASCADE', ondelete='SET NULL')
    op.drop_column('camera', 'image_id')
    op.add_column('parkinglot', sa.Column('plate', sa.String(), nullable=True))
    op.drop_column('parkinglot', 'floor_number')
    op.drop_column('parkinglot', 'ocr')
    op.drop_column('parkinglot', 'floor_name')
    op.add_column('parkingzone', sa.Column('floor_number', sa.Integer(), nullable=True))
    op.add_column('parkingzone', sa.Column('floor_name', sa.String(), nullable=True))
    op.add_column('price', sa.Column('weekly_days', postgresql.JSON(astext_type=sa.Text()), nullable=True))
    op.drop_column('price', 'price_model')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('price', sa.Column('price_model', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_column('price', 'weekly_days')
    op.drop_column('parkingzone', 'floor_name')
    op.drop_column('parkingzone', 'floor_number')
    op.add_column('parkinglot', sa.Column('floor_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('parkinglot', sa.Column('ocr', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('parkinglot', sa.Column('floor_number', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_column('parkinglot', 'plate')
    op.add_column('camera', sa.Column('image_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'camera', type_='foreignkey')
    op.drop_constraint(None, 'camera', type_='foreignkey')
    op.create_foreign_key('camera_image_id_fkey', 'camera', 'image', ['image_id'], ['id'], onupdate='CASCADE', ondelete='SET NULL')
    op.drop_index(op.f('ix_camera_zone_id'), table_name='camera')
    op.drop_index(op.f('ix_camera_image_main_id'), table_name='camera')
    op.create_index('ix_camera_image_id', 'camera', ['image_id'], unique=False)
    op.drop_column('camera', 'zone_id')
    op.drop_column('camera', 'image_main_id')
    op.create_table('plate',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('ocr', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('record_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('number_line', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('floor_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('floor_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name_parkinglot', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('camera_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('record_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lpr_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('big_image_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('price_model', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['big_image_id'], ['image.id'], name='plate_big_image_id_fkey', onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['camera_id'], ['camera.id'], name='plate_camera_id_fkey'),
    sa.ForeignKeyConstraint(['lpr_id'], ['image.id'], name='plate_lpr_id_fkey', onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['record_id'], ['record.id'], name='plate_record_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='plate_pkey')
    )
    op.create_index('ix_plate_record_time', 'plate', ['record_time'], unique=False)
    op.create_index('ix_plate_record_id', 'plate', ['record_id'], unique=False)
    op.create_index('ix_plate_ocr', 'plate', ['ocr'], unique=False)
    op.create_index('ix_plate_modified', 'plate', ['modified'], unique=False)
    op.create_index('ix_plate_lpr_id', 'plate', ['lpr_id'], unique=False)
    op.create_index('ix_plate_is_deleted', 'plate', ['is_deleted'], unique=False)
    op.create_index('ix_plate_id', 'plate', ['id'], unique=False)
    op.create_index('ix_plate_created', 'plate', ['created'], unique=False)
    op.create_index('ix_plate_camera_id', 'plate', ['camera_id'], unique=False)
    op.create_index('ix_plate_big_image_id', 'plate', ['big_image_id'], unique=False)
    # ### end Alembic commands ###
